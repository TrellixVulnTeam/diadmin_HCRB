[
    {
        "id": "1d0a0320cb31b3c8170033aef772e8f5",
        "name": "City",
        "title": "City",
        "description": "Check if there is a City defined",
        "category": "Accuracy",
        "num_references": 0,
        "status": "ACTIVE",
        "parameters": [
            {
                "name": "CityName",
                "previousName": "",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            }
        ],
        "conditions": [
            {
                "name": "CityName",
                "operator": "IS_NOT_NULL",
                "conditionName": "CityNotNull",
                "valuesList": [],
                "isValuesListParameter": false
            }
        ],
        "condition_grouping": [
            "CityNotNull"
        ],
        "filters": [],
        "filter_grouping": [],
        "filter_expression": {
            "script": "",
            "errors": []
        },
        "rule_expression": {
            "script": "BEGIN\n  RETURN $CityName IS NOT NULL\n;\nEND",
            "errors": []
        }
    },
    {
        "id": "842a075099b6248e1700a9ca6da85a58",
        "name": "Country US",
        "title": "Country US",
        "description": "he US customer file must not be null and must have a standardized country value of 'US'.",
        "category": "Accuracy",
        "num_references": 2,
        "status": "ACTIVE",
        "parameters": [
            {
                "name": "Country",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            }
        ],
        "conditions": [
            {
                "name": "Country",
                "operator": "IS_NOT_NULL",
                "conditionName": "CountryNotNull",
                "valuesList": [],
                "isValuesListParameter": false
            },
            {
                "name": "Country",
                "operator": "EQUAL",
                "conditionName": "CountryUS",
                "valuesList": [
                    "US"
                ],
                "isValuesListParameter": false
            }
        ],
        "condition_grouping": [
            "CountryNotNull",
            "AND",
            "CountryUS"
        ],
        "filters": [],
        "filter_grouping": [],
        "filter_expression": {
            "script": "",
            "errors": []
        },
        "rule_expression": {
            "script": "BEGIN\n  RETURN $Country IS NOT NULL AND $Country = 'US'\n;\nEND",
            "errors": []
        }
    },
    {
        "id": "e14e0fa0bd71f0b817000ce286077533",
        "name": "PostalCode",
        "title": "Postal Code",
        "description": "A city postal code that must be 5 digits.",
        "category": "Conformity",
        "num_references": 1,
        "status": "ACTIVE",
        "parameters": [
            {
                "name": "Code",
                "previousName": "",
                "description": "A Postal Code of 5 digits",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            }
        ],
        "conditions": [
            {
                "name": "Code",
                "operator": "MATCH_PATTERN",
                "conditionName": "NumberOfDigits",
                "valuesList": [
                    "99999"
                ],
                "isValuesListParameter": false
            }
        ],
        "condition_grouping": [
            "NumberOfDigits"
        ],
        "filters": [],
        "filter_grouping": [],
        "filter_expression": {
            "script": "",
            "errors": []
        },
        "rule_expression": {
            "script": "BEGIN\n  RETURN match_pattern($Code, '99999')\n;\nEND",
            "errors": []
        }
    },
    {
        "id": "215b0c505bd531c41700beae556aa6f0",
        "name": "INCO",
        "title": "INCO in BBM",
        "description": "Usage standard incoterms in scheduled agreements BBM. \nReason: Monitor alignment with the standards on inbound side (=> FCA, DAP, DDP) in scheduling agreements (EKKO)",
        "category": "DATAQM",
        "num_references": 2,
        "status": "ACTIVE",
        "parameters": [
            {
                "name": "INCO1",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "AEDAT",
                "description": "",
                "contentType": "DEFAULT",
                "type": "DATE",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "EKORG",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "BSART",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            }
        ],
        "conditions": [
            {
                "name": "INCO1",
                "operator": "EQUAL",
                "conditionName": "VALID_INCO1_FCA",
                "valuesList": [
                    "FCA"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "INCO1",
                "operator": "EQUAL",
                "conditionName": "VALID_INCO1_DAP",
                "valuesList": [
                    "DAP"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "INCO1",
                "operator": "EQUAL",
                "conditionName": "VALID_INCO1_DDP",
                "valuesList": [
                    "DDP"
                ],
                "isValuesListParameter": false
            }
        ],
        "condition_grouping": [
            "VALID_INCO1_FCA",
            "OR",
            "VALID_INCO1_DAP",
            "OR",
            "VALID_INCO1_DDP"
        ],
        "filters": [],
        "filter_grouping": [],
        "filter_expression": {
            "script": "BEGIN\n    RETURN (year($AEDAT) = year(sysdate())) AND \n           ($BSART = 'LPA' OR $BSART = 'LP') AND \n           ($EKORG = '2032' OR $EKORG = '4510' OR $EKORG = '4991' OR \n           $EKORG = '5153' OR $EKORG = '9080' OR $EKORG = 'LOGA' OR $EKORG = 'EDLA');\nEND",
            "errors": []
        },
        "rule_expression": {
            "script": "BEGIN\n  RETURN $INCO1 = 'FCA' OR $INCO1 = 'DAP' OR $INCO1 = 'DDP'\n;\nEND",
            "errors": []
        }
    },
    {
        "id": "687f0c505bd531c41700beae556aa6f0",
        "name": "PROD_HIERARCHY_PROFIT",
        "title": "Product Hierarchy - Profit Conformity",
        "description": "Conformity Product Hierarchy: \nProduct Hierarchy should be equal to Profit Center",
        "category": "DATAQM",
        "num_references": 2,
        "status": "ACTIVE",
        "parameters": [
            {
                "name": "LVORM",
                "description": "Basic Data deletion Indicator",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "YPRCTRUGB",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "YPRODHUGB",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "MTART",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "MSTAE",
                "description": "",
                "contentType": "DEFAULT",
                "type": "INTEGER",
                "caseInsensitive": false,
                "trim": false
            }
        ],
        "conditions": [],
        "condition_grouping": [],
        "filters": [
            {
                "name": "LVORM",
                "operator": "EQUAL",
                "conditionName": "LVORM_X",
                "valuesList": [
                    "X"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "YPRCTRUGB",
                "operator": "NOT_EQUAL",
                "conditionName": "YPRCTRUGB_NOT_INITIAL",
                "valuesList": [
                    "initial"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "YPRODHUGB",
                "operator": "NOT_EQUAL",
                "conditionName": "YPRODHUGB_NOT_INITIAL",
                "valuesList": [
                    "initial"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "YPRODHUGB",
                "operator": "MATCH_PATTERN",
                "conditionName": "YPRODHUGB_NOT_MATCH",
                "valuesList": [
                    "[!E]*"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "MTART",
                "operator": "EQUAL",
                "conditionName": "MTART_FERT",
                "valuesList": [
                    "FERT"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "MTART",
                "operator": "EQUAL",
                "conditionName": "MTART_HAWA",
                "valuesList": [
                    "HAWA"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "MTART",
                "operator": "EQUAL",
                "conditionName": "MTART_DIEN",
                "valuesList": [
                    "DIEN"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "MTART",
                "operator": "EQUAL",
                "conditionName": "MTART_MUBL",
                "valuesList": [
                    "MUBL"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "MSTAE",
                "operator": "EQUAL",
                "conditionName": "MSTAE_40",
                "valuesList": [
                    "40"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "MSTAE",
                "operator": "EQUAL",
                "conditionName": "MSTAE_49",
                "valuesList": [
                    "49"
                ],
                "isValuesListParameter": false
            }
        ],
        "filter_grouping": [
            "LVORM_X",
            "AND",
            "YPRCTRUGB_NOT_INITIAL",
            "AND",
            "YPRODHUGB_NOT_INITIAL",
            "AND",
            "YPRODHUGB_NOT_MATCH",
            "AND",
            "(",
            "MTART_FERT",
            "OR",
            "MTART_HAWA",
            "OR",
            "MTART_DIEN",
            "OR",
            "MTART_MUBL",
            ")",
            "AND",
            "(",
            "MSTAE_40",
            "OR",
            "MSTAE_49",
            ")"
        ],
        "filter_expression": {
            "script": "BEGIN\n  RETURN $LVORM = 'X' AND $YPRCTRUGB != 'initial' AND $YPRODHUGB != 'initial' AND match_pattern($YPRODHUGB, '[!E]*') AND ( $MTART = 'FERT' OR $MTART = 'HAWA' OR $MTART = 'DIEN' OR $MTART = 'MUBL' ) AND ( $MSTAE = 40 OR $MSTAE = 49 )\n;\nEND",
            "errors": []
        },
        "rule_expression": {
            "script": "BEGIN\n  RETURN substr($YPRCTRUGB, 3, 4) = substr($YPRODHUGB, 7, 4);\nEND",
            "errors": []
        }
    },
    {
        "id": "a8680c505bd531c41700beae556aa6f0",
        "name": "URL_DUMMY",
        "title": "URL DUMMY",
        "description": "Test if given URL has no \"DUMMY\" or \"TEST\" substring.",
        "category": "DATAQM",
        "num_references": 2,
        "status": "ACTIVE",
        "parameters": [
            {
                "name": "ATTACH_URL",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "STATUS",
                "description": "",
                "contentType": "DEFAULT",
                "type": "INTEGER",
                "caseInsensitive": false,
                "trim": false
            }
        ],
        "conditions": [
            {
                "name": "ATTACH_URL",
                "operator": "MATCH_PATTERN",
                "conditionName": "DUMMY_URL",
                "valuesList": [
                    "*DUMMY"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "ATTACH_URL",
                "operator": "MATCH_PATTERN",
                "conditionName": "TEST_URL",
                "valuesList": [
                    "*TEST"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "ATTACH_URL",
                "operator": "MATCH_PATTERN",
                "conditionName": "LC_test_URL",
                "valuesList": [
                    "*test"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "ATTACH_URL",
                "operator": "MATCH_PATTERN",
                "conditionName": "LC_dummy_URL",
                "valuesList": [
                    "*dummy"
                ],
                "isValuesListParameter": false
            }
        ],
        "condition_grouping": [
            "NOT",
            "(",
            "DUMMY_URL",
            "OR",
            "TEST_URL",
            "OR",
            "LC_test_URL",
            "OR",
            "LC_dummy_URL",
            ")"
        ],
        "filters": [
            {
                "name": "STATUS",
                "operator": "EQUAL",
                "conditionName": "STATUS_40",
                "valuesList": [
                    "40"
                ],
                "isValuesListParameter": false
            }
        ],
        "filter_grouping": [
            "STATUS_40"
        ],
        "filter_expression": {
            "script": "BEGIN\n  RETURN $STATUS = 40\n;\nEND",
            "errors": []
        },
        "rule_expression": {
            "script": "BEGIN\n  RETURN NOT ( match_pattern($ATTACH_URL, '*DUMMY') OR match_pattern($ATTACH_URL, '*TEST') OR match_pattern($ATTACH_URL, '*test') OR match_pattern($ATTACH_URL, '*dummy') )\n;\nEND",
            "errors": []
        }
    },
    {
        "id": "437a0c505bd531c41700beae556aa6f0",
        "name": "WEIGHT",
        "title": "WEIGHT Check",
        "description": "Weight for packaging materials available\nReason: \u000bGuaranteeing correct handling-unit-weight-calculation for loading specification in transportation.",
        "category": "DATAQM",
        "num_references": 2,
        "status": "ACTIVE",
        "parameters": [
            {
                "name": "NTGEW",
                "description": "Net Weight",
                "contentType": "DEFAULT",
                "type": "DECIMAL",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "BRGEW",
                "description": "Gross Weight",
                "contentType": "DEFAULT",
                "type": "DECIMAL",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "ZZPMCG",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "MSTAE",
                "description": "Material Status",
                "contentType": "DEFAULT",
                "type": "INTEGER",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "MTART",
                "description": "Material Type",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            }
        ],
        "conditions": [
            {
                "name": "NTGEW",
                "operator": "IS_NOT_NULL",
                "conditionName": "NTGEW_NOT_NULL",
                "valuesList": [],
                "isValuesListParameter": false
            },
            {
                "name": "NTGEW",
                "operator": "NOT_EQUAL",
                "conditionName": "NTGEW_NOT_ZERO",
                "valuesList": [
                    "0.0"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "BRGEW",
                "operator": "IS_NOT_NULL",
                "conditionName": "BRGEW_NOT_NULL",
                "valuesList": [],
                "isValuesListParameter": false
            },
            {
                "name": "BRGEW",
                "operator": "NOT_EQUAL",
                "conditionName": "BRGEW_NOT_ZERO",
                "valuesList": [
                    "0.0"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "NTGEW",
                "operator": "EQUAL",
                "conditionName": "NTGEW_EQUAL_BRGEW",
                "valuesList": [
                    "BRGEW"
                ],
                "isValuesListParameter": true
            }
        ],
        "condition_grouping": [
            "NTGEW_NOT_NULL",
            "AND",
            "NTGEW_NOT_ZERO",
            "AND",
            "BRGEW_NOT_NULL",
            "AND",
            "BRGEW_NOT_ZERO",
            "AND",
            "NTGEW_EQUAL_BRGEW"
        ],
        "filters": [
            {
                "name": "ZZPMCG",
                "operator": "EQUAL",
                "conditionName": "ZZPMCG_X",
                "valuesList": [
                    "X"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "MSTAE",
                "operator": "EQUAL",
                "conditionName": "MSTAE_40",
                "valuesList": [
                    "40"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "MTART",
                "operator": "EQUAL",
                "conditionName": "MTART_VHIB",
                "valuesList": [
                    "VHIB"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "MTART",
                "operator": "EQUAL",
                "conditionName": "MTART_MWEG",
                "valuesList": [
                    "MWEG"
                ],
                "isValuesListParameter": false
            },
            {
                "name": "MTART",
                "operator": "EQUAL",
                "conditionName": "MTART_VERP",
                "valuesList": [
                    "VERP"
                ],
                "isValuesListParameter": false
            }
        ],
        "filter_grouping": [
            "ZZPMCG_X",
            "AND",
            "MSTAE_40",
            "AND",
            "(",
            "MTART_VHIB",
            "OR",
            "MTART_MWEG",
            "OR",
            "MTART_VERP",
            ")"
        ],
        "filter_expression": {
            "script": "BEGIN\n  RETURN $ZZPMCG = 'X' AND $MSTAE = 40 AND ( $MTART = 'VHIB' OR $MTART = 'MWEG' OR $MTART = 'VERP' )\n;\nEND",
            "errors": []
        },
        "rule_expression": {
            "script": "BEGIN\n  RETURN $NTGEW IS NOT NULL AND $NTGEW != 0.0 AND $BRGEW IS NOT NULL AND $BRGEW != 0.0 AND $NTGEW = $BRGEW\n;\nEND",
            "errors": []
        }
    },
    {
        "id": "430e0590d4c19c891700bb3e735975ed",
        "name": "CSKA",
        "title": "CSKA Comparison",
        "description": "Compares SAP instance data with reference data set.",
        "category": "DATAQM_SAPCC",
        "num_references": 2,
        "status": "ACTIVE",
        "parameters": [
            {
                "name": "KTOPL",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "REF_FUNC_AREA",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "FUNC_AREA",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            }
        ],
        "conditions": [
            {
                "name": "FUNC_AREA",
                "operator": "EQUAL",
                "conditionName": "FUNC_AREA_EQUAL",
                "valuesList": [
                    "REF_FUNC_AREA"
                ],
                "isValuesListParameter": true
            },
            {
                "name": "FUNC_AREA",
                "operator": "IS_NULL",
                "conditionName": "FUNC_AREA_ISNULL",
                "valuesList": [],
                "isValuesListParameter": false
            },
            {
                "name": "REF_FUNC_AREA",
                "operator": "IS_NULL",
                "conditionName": "REF_FUNC_AREA_ISNULL",
                "valuesList": [],
                "isValuesListParameter": false
            }
        ],
        "condition_grouping": [
            "FUNC_AREA_EQUAL",
            "OR",
            "(",
            "FUNC_AREA_ISNULL",
            "AND",
            "REF_FUNC_AREA_ISNULL",
            ")"
        ],
        "filters": [
            {
                "name": "KTOPL",
                "operator": "EQUAL",
                "conditionName": "KTOPL_RB1",
                "valuesList": [
                    "YG1"
                ],
                "isValuesListParameter": false
            }
        ],
        "filter_grouping": [
            "KTOPL_RB1"
        ],
        "filter_expression": {
            "script": "BEGIN\n  RETURN $KTOPL = 'YG1'\n;\nEND",
            "errors": []
        },
        "rule_expression": {
            "script": "BEGIN\n  RETURN $FUNC_AREA = $REF_FUNC_AREA OR ( $FUNC_AREA IS NULL AND $REF_FUNC_AREA IS NULL )\n;\nEND",
            "errors": []
        }
    },
    {
        "id": "92150590d4c19c891700bb3e735975ed",
        "name": "CSKB",
        "title": "CSKB",
        "description": "Compares CSKB datasets against reference table.",
        "category": "DATAQM_SAPCC",
        "num_references": 1,
        "status": "ACTIVE",
        "parameters": [
            {
                "name": "KOKRS",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "DATAB",
                "description": "",
                "contentType": "DEFAULT",
                "type": "DATE",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "DATBI",
                "description": "",
                "contentType": "DEFAULT",
                "type": "DATE",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "REF_MSEHI",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "MSEHI",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "REF_EIGEN",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "EIGEN",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "REF_KATYP",
                "description": "",
                "contentType": "DEFAULT",
                "type": "INTEGER",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "KATYP",
                "description": "",
                "contentType": "DEFAULT",
                "type": "INTEGER",
                "caseInsensitive": false,
                "trim": false
            }
        ],
        "conditions": [],
        "condition_grouping": [],
        "filters": [
            {
                "name": "KOKRS",
                "operator": "EQUAL",
                "conditionName": "KOKRS",
                "valuesList": [
                    "0010"
                ],
                "isValuesListParameter": false
            }
        ],
        "filter_grouping": [
            "KOKRS"
        ],
        "filter_expression": {
            "script": "BEGIN\n  RETURN $KOKRS = '0010'\n;\nEND",
            "errors": []
        },
        "rule_expression": {
            "script": "DECLARE\n    # define variables\n    $TODAY date;\nBEGIN\n    $TODAY = sysdate();\n    # define condition script\n    if (($DATAB < $TODAY) AND ($DATBI > $TODAY) AND ($REF_MSEHI = $MSEHI) AND ($REF_EIGEN = $EIGEN) AND ($REF_KATYP = $KATYP) ) \n    RETURN TRUE;\n    else\n    RETURN FALSE;\nEND",
            "errors": []
        }
    },
    {
        "id": "c78c0590d4c19c891700bb3e735975ed",
        "name": "CSKU",
        "title": "CSKU Comparison",
        "description": "Compares CSKB instances against reference table.",
        "category": "DATAQM_SAPCC",
        "num_references": 1,
        "status": "ACTIVE",
        "parameters": [
            {
                "name": "REF_KTEXT",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "KTEXT",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "REF_LTEXT",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            },
            {
                "name": "LTEXT",
                "description": "",
                "contentType": "DEFAULT",
                "type": "STRING",
                "caseInsensitive": false,
                "trim": false
            }
        ],
        "conditions": [
            {
                "name": "REF_KTEXT",
                "operator": "EQUAL",
                "conditionName": "KTEXT_EQUAL",
                "valuesList": [
                    "KTEXT"
                ],
                "isValuesListParameter": true
            },
            {
                "name": "REF_LTEXT",
                "operator": "EQUAL",
                "conditionName": "LTEXT_EQUAL",
                "valuesList": [
                    "LTEXT"
                ],
                "isValuesListParameter": true
            },
            {
                "name": "KTEXT",
                "operator": "IS_NULL",
                "conditionName": "KTEXT_ISNULL",
                "valuesList": [],
                "isValuesListParameter": false
            },
            {
                "name": "REF_KTEXT",
                "operator": "IS_NULL",
                "conditionName": "REF_KTEXT_ISNULL",
                "valuesList": [],
                "isValuesListParameter": false
            },
            {
                "name": "LTEXT",
                "operator": "IS_NULL",
                "conditionName": "LTEXT_ISNULL",
                "valuesList": [],
                "isValuesListParameter": false
            },
            {
                "name": "REF_LTEXT",
                "operator": "IS_NULL",
                "conditionName": "REF_LTEXT_ISNULL",
                "valuesList": [],
                "isValuesListParameter": false
            }
        ],
        "condition_grouping": [
            "(",
            "KTEXT_EQUAL",
            "OR",
            "(",
            "KTEXT_ISNULL",
            "AND",
            "REF_KTEXT_ISNULL",
            ")",
            ")",
            "AND",
            "(",
            "LTEXT_EQUAL",
            "OR",
            "(",
            "LTEXT_ISNULL",
            "AND",
            "REF_LTEXT_ISNULL",
            ")",
            ")"
        ],
        "filters": [],
        "filter_grouping": [],
        "filter_expression": {
            "script": "",
            "errors": []
        },
        "rule_expression": {
            "script": "BEGIN\n  RETURN ( $REF_KTEXT = $KTEXT OR ( $KTEXT IS NULL AND $REF_KTEXT IS NULL ) ) AND ( $REF_LTEXT = $LTEXT OR ( $LTEXT IS NULL AND $REF_LTEXT IS NULL ) )\n;\nEND",
            "errors": []
        }
    }
]